version: '3'

services:

  redis:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  db:
    image: postgres
    restart: always
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data/
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_DB=django_habit

  app:
    image: app
    build: .
    tty: true
    command: sh -c 'python manage.py migrate && python manage.py runserver 0.0.0.0:8000'
    ports:
      - '8000:8000'
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_healthy

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - app
    healthcheck:
      test: [ "CMD", "celery", "inspect", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      - CELERY_BROKER_CONNECTION_MAX_RETRIES=3


  celery_beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO -S django
    depends_on:
      - celery
      - redis
      - app


volumes:
  pg_data: